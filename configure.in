dnl Process this file with autoconf to produce a configure script.
AC_INIT(SpiralSynthModular.C)

dnl Automake (can't use AC_CONFIG_HEADER - get complaints!)
AM_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_INSTALL

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_C_INLINE

dnl Check plugin directory
AC_ARG_WITH(plugindir,
  [ --with-plugindir=dir        give the plugin directory],
  plugindir="$withval",
  plugindir="/usr/lib/SpiralPlugins")
AC_SUBST(PLUGINDIR, $plugindir)

dnl Check whether to enable debugging

AC_ARG_ENABLE(debug,  [  --enable-debug             enable debugging ],
        ac_arg_debug="Y", ac_arg_debug="N")

if test $ac_arg_debug = "Y" ; then
	CFLAGS="-pipe -Wall -O0 -ggdb "
	CXXFLAGS="-pipe -Wall -O0 -ggdb "
else
	CFLAGS="-pipe -Wall -O3 -ffast-math -DNO_DEBUG -Wno-unused "
	CXXFLAGS="-pipe -Wall -O3 -ffast-math -DNO_DEBUG -Wno-unused "
	fi
echo "$PLUGINLIST" > SpiralSound/PluginList.txt

AC_ARG_ENABLE(jack,  [  --enable-jack              build JackPlugin ],
        ac_arg_jack="Y", ac_arg_jack="N")
	
if test $ac_arg_jack = "Y" ; then
	PLUGINLIST="AmpPlugin ControllerPlugin DelayPlugin EchoPlugin EnvFollowerPlugin \
	EnvelopePlugin FilterPlugin MatrixPlugin MidiPlugin MixerPlugin MoogFilterPlugin \
	NoteSnapPlugin OscillatorPlugin OutputPlugin RingModPlugin SVFilterPlugin \
	SampleHoldPlugin ScopePlugin SmoothPlugin SplitterPlugin StereoMixerPlugin StreamPlugin\
	WaveTablePlugin LADSPAPlugin XFadePlugin PoshSamplerPlugin SeqSelectorPlugin\
	DistributorPlugin LFOPlugin KeyboardPlugin DiskWriterPlugin FormantFilterPlugin \
	AnotherFilterPlugin OperatorPlugin CounterPlugin FlipflopPlugin SwitchPlugin \
	BeatMatchPlugin NoisePlugin LogicPlugin SplitSwitchPlugin \
	MixSwitchPlugin MeterPlugin WaveShaperPlugin TrigPlugin SpiralLoopPlugin  \
	MasherPlugin TransposePlugin JackPlugin"
else
	PLUGINLIST="AmpPlugin ControllerPlugin DelayPlugin EchoPlugin EnvFollowerPlugin \
	EnvelopePlugin FilterPlugin MatrixPlugin MidiPlugin MixerPlugin MoogFilterPlugin \
	NoteSnapPlugin OscillatorPlugin OutputPlugin RingModPlugin SVFilterPlugin \
	SampleHoldPlugin ScopePlugin SmoothPlugin SplitterPlugin StereoMixerPlugin StreamPlugin\
	WaveTablePlugin LADSPAPlugin XFadePlugin PoshSamplerPlugin SeqSelectorPlugin\
	DistributorPlugin LFOPlugin KeyboardPlugin DiskWriterPlugin FormantFilterPlugin \
	AnotherFilterPlugin OperatorPlugin CounterPlugin FlipflopPlugin SwitchPlugin \
	BeatMatchPlugin NoisePlugin LogicPlugin SplitSwitchPlugin \
	MixSwitchPlugin MeterPlugin WaveShaperPlugin TrigPlugin SpiralLoopPlugin \
	MasherPlugin TransposePlugin"

	fi
echo "$PLUGINLIST" > SpiralSound/PluginList.txt

dnl Check whether liblrdf has been enabled
AC_ARG_ENABLE(
    lrdf,
    [  --enable-lrdf           Enable liblrdf for LADSPA Plugin [no]],
    [use_liblrdf="y"],
    [use_liblrdf="n"]
)
if test "$use_liblrdf" = "y"; then
    AC_CHECK_HEADER(lrdf.h, , AC_MSG_ERROR( ** No lrdf.h found for liblrdf))
    AC_CHECK_LIB(lrdf, lrdf_init, AC_DEFINE(HAVE_LIBLRDF, , [Enable liblrdf support for LADSPA Plugin]), AC_MSG_ERROR( ** No liblrdf found))
    LRDFLIBS="-llrdf"
    AC_SUBST(LRDFLIBS)
fi

dnl Check if POSIX SHM enabled (for sharing LADSPA Plugin database)
dnl Nicked in part from JACK configure.in
AC_ARG_ENABLE(
    posix-shm,
    [  --enable-posix-shm      Enable POSIX SHM for LADSPA Plugin [no]
                            This allows a single LADSPA plugin database
                            to be shared between instances],
    [use_posix_shm="y"],
    [use_posix_shm="n"]
)
if test "$use_posix_shm" = "y"; then
    AC_MSG_CHECKING([POSIX SHM support ])
    ls /dev/shm >/dev/null 2>&1
    if test $? = 0; then
        AC_DEFINE(USE_POSIX_SHM, ,[Enable POSIX SHM support for LADSPA Plugin])
        AC_MSG_RESULT(found.)
        SHMLIBS="-lrt"
        AC_SUBST(SHMLIBS)
    else
        AC_MSG_RESULT(not found.)
    fi
fi

dnl Checks for library functions.

AC_CHECK_HEADERS(math.h)
AC_CHECK_LIB(m, sin)

dnl AC_CHECK_HEADERS(X11/Xlib.h)
dnl AC_CHECK_LIB(X11, XDisplayName)
dnl AC_CHECK_LIB(Xext, main)

AC_PATH_PROG(FLTK_CONFIG, fltk-config, no)
if test "$FLTK_CONFIG" = "no"; then
  AC_PATH_XTRA
  LIBGL=""
  CPPFLAGS="$CPPFLAGS $X_CFLAGS"
  AC_CHECK_HEADERS(GL/gl.h)
  if test $ac_cv_header_GL_gl_h = "yes" ; then
    AC_CHECK_LIB(GL, glBegin, LIBGL="-lGL")
  fi
  AC_CHECK_HEADERS(FL/Fl.h)
  if test $ac_cv_header_FL_Fl_h = "no" ; then
    echo "*** FLTK headers missing."
    exit 1
  fi
  AC_CHECK_LIB(fltk, main)
  FLTK_CXXFLAGS="$X_CFLAGS"
  FLTK_CFLAGS="$FLTK_CXXFLAGS"
  FLTK_LIBS="$X_LIBS -lfltk $LIBGL"
else
  FLTK_CXXFLAGS=`$FLTK_CONFIG $fltk_config_args --cxxflags`
  FLTK_CFLAGS=`$FLTK_CONFIG $fltk_config_args --cxxflags`
  FLTK_LIBS=`$FLTK_CONFIG $fltk_config_args --ldflags`
dnl This caused problems for debian users,
dnl It would be nice to find a more robust way of doing it.
dnl  if test "${FLTK_LIBS/*-rpath*/yes}" != "yes"; then
dnl    echo "*** FLTK needs to be configured with --enable-shared"
dnl   exit 1
dnl  fi
fi
AC_SUBST(FLTK_CXXFLAGS)
AC_SUBST(FLTK_CFLAGS)
AC_SUBST(FLTK_LIBS)

AC_CHECK_HEADERS(dlfcn.h)
AC_CHECK_LIB(dl, dlopen)

AC_CHECK_HEADERS(png.h)
AC_CHECK_LIB(png, png_get_copyright)

dnl This is normally done with libtool but since we aren't using libtool
dnl yet to it here.

dnl FIXME: forced to add -fPIC here..
CFLAGS="$CFLAGS -fPIC"
CXXFLAGS="$CFLAGS -fPIC"

AC_SUBST(CFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(PLUGINLIST)

dnl Modify the output files.

AC_OUTPUT(
SpiralSound/Plugins/AmpPlugin/Makefile
SpiralSound/Plugins/AnotherFilterPlugin/Makefile
SpiralSound/Plugins/ControllerPlugin/Makefile
SpiralSound/Plugins/DelayPlugin/Makefile
SpiralSound/Plugins/DiskWriterPlugin/Makefile
SpiralSound/Plugins/DistributorPlugin/Makefile
SpiralSound/Plugins/EchoPlugin/Makefile
SpiralSound/Plugins/EnvFollowerPlugin/Makefile
SpiralSound/Plugins/EnvelopePlugin/Makefile
SpiralSound/Plugins/FilterPlugin/Makefile
SpiralSound/Plugins/FormantFilterPlugin/Makefile
SpiralSound/Plugins/JackPlugin/Makefile
SpiralSound/Plugins/KeyboardPlugin/Makefile
SpiralSound/Plugins/LADSPAPlugin/Makefile
SpiralSound/Plugins/LFOPlugin/Makefile
SpiralSound/Plugins/MatrixPlugin/Makefile
SpiralSound/Plugins/MeterPlugin/Makefile
SpiralSound/Plugins/MidiPlugin/Makefile
SpiralSound/Plugins/MixerPlugin/Makefile
SpiralSound/Plugins/MoogFilterPlugin/Makefile
SpiralSound/Plugins/NoteSnapPlugin/Makefile
SpiralSound/Plugins/OscillatorPlugin/Makefile
SpiralSound/Plugins/OutputPlugin/Makefile
SpiralSound/Plugins/PoshSamplerPlugin/Makefile
SpiralSound/Plugins/RingModPlugin/Makefile
SpiralSound/Plugins/SVFilterPlugin/Makefile
SpiralSound/Plugins/SampleHoldPlugin/Makefile
SpiralSound/Plugins/SeqSelectorPlugin/Makefile
SpiralSound/Plugins/ScopePlugin/Makefile
SpiralSound/Plugins/SmoothPlugin/Makefile
SpiralSound/Plugins/SplitterPlugin/Makefile
SpiralSound/Plugins/StereoMixerPlugin/Makefile
SpiralSound/Plugins/StreamPlugin/Makefile
SpiralSound/Plugins/WaveShaperPlugin/Makefile
SpiralSound/Plugins/WaveTablePlugin/Makefile
SpiralSound/Plugins/XFadePlugin/Makefile
SpiralSound/Plugins/OperatorPlugin/Makefile
SpiralSound/Plugins/CounterPlugin/Makefile
SpiralSound/Plugins/FlipflopPlugin/Makefile
SpiralSound/Plugins/SwitchPlugin/Makefile
SpiralSound/Plugins/BeatMatchPlugin/Makefile
SpiralSound/Plugins/NoisePlugin/Makefile
SpiralSound/Plugins/LogicPlugin/Makefile
SpiralSound/Plugins/SplitSwitchPlugin/Makefile
SpiralSound/Plugins/MixSwitchPlugin/Makefile
SpiralSound/Plugins/TrigPlugin/Makefile
SpiralSound/Plugins/SpiralLoopPlugin/Makefile
SpiralSound/Plugins/MasherPlugin/Makefile
SpiralSound/Plugins/TransposePlugin/Makefile
SpiralSynthPluginLocation.h
Makefile
)

